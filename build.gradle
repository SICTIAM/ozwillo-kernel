apply from: './libraries.gradle'

group = 'fr.pole-numerique.oasis'
version = 'git describe --long'.execute(null, rootDir).text.trim() - ~'^v'

ext.versionlessOutputs = project.hasProperty("versionlessOutputs") ? Boolean.parseBoolean(project.property("versionlessOutputs")) : false;

subprojects {
  apply plugin: 'errorprone'

  apply plugin: 'idea' // IDEA needs extra configuration for generated sources *sigh*
  idea {
    module {
      // un-exclude $buildDir, then exclude all non-'generated-sources' subdir of $buildDir
      excludeDirs -= file(buildDir)
      buildDir.listFiles({ d , f -> f != 'generated-sources' } as FilenameFilter).each { excludeDirs += it }
    }
  }

  group = rootProject.group
  version = rootProject.version

  configurations {
    apt
    testApt {
      extendsFrom apt
    }
  }

  plugins.withType(JavaPlugin).whenPluginAdded {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    tasks.withType(JavaCompile) {
      options.encoding = 'UTF-8'
    }

    afterEvaluate {
      if (!configurations.apt.empty) {
        def aptOutput = new File(project.buildDir, "generated-sources/apt")
        project.compileJava.options.compilerArgs += [
            '-processorpath', configurations.apt.asPath,
            '-s', aptOutput
        ]
        project.compileJava.doFirst {
          aptOutput.mkdirs()
        }
      }
      if (!configurations.apt.empty) {
        def testAptOutput = new File(project.buildDir, "generated-sources/testApt")
        project.compileTestJava.options.compilerArgs += [
            '-processorpath', configurations.testApt.asPath,
            '-s', testAptOutput
        ]
        project.compileTestJava.doFirst {
            testAptOutput.mkdirs()
        }
      }
    }

    if (versionlessOutputs) {
      tasks.withType(AbstractArchiveTask) {
        archiveName = "${baseName}.${extension}"
      }
    }
  }
}

buildscript {
  repositories {
maven { url 'https://oss.sonatype.org/content/repositories/netltgt-1004/' }
    mavenCentral()
  }
  dependencies {
    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:latest.release'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
}
